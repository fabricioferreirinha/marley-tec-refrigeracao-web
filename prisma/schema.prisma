// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

model User {
  id            String    @id
  name          String?
  email         String    @unique
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("users")
}

model Anuncio {
  id              String       @id @default(cuid())
  titulo          String
  descricao       String
  preco           Decimal
  categoria       Categoria    @default(OUTROS)
  condicao        Condicao     @default(USADO)
  localizacao     String?
  imagens         String[]
  status          Status       @default(ATIVO)
  destaque        Boolean      @default(false)
  referencia      String       @unique @default(cuid())
  contato         String
  whatsappMessage String?
  visualizacoes   Int          @default(0)
  dataPublicacao  DateTime     @default(now())
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt

  @@map("anuncios")
}

model Review {
  id            String    @id @default(cuid())
  nome          String
  avatar        String?   // URL da foto
  avatarColor   String?   // Cor do avatar quando não tem foto
  avatarInitials String? // Iniciais customizadas
  nota          Float     // 1-5 estrelas (permitindo decimais como 4.5)
  comentario    String
  tempoRelativo String    @default("1 semana atrás") // Tempo editável como string
  ativo         Boolean   @default(true)
  source        String    @default("SITE") // GOOGLE, FACEBOOK, SITE, WHATSAPP, etc
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@map("reviews")
}

model Configuracao {
  id                    String  @id @default(cuid())
  chave                 String  @unique
  valor                 String
  descricao             String?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("configuracoes")
}

enum Status {
  ATIVO
  INATIVO
  ARQUIVADO
}

enum Categoria {
  GELADEIRA
  FREEZER
  MAQUINA_LAVAR
  SECADORA
  LAVA_LOUCAS
  MICROONDAS
  FORNO
  FOGAO
  COOKTOP
  AR_CONDICIONADO
  VENTILADOR
  PURIFICADOR_AGUA
  OUTROS
}

enum Condicao {
  NOVO
  SEMINOVO
  USADO
  PARA_RETIRAR_PECAS
  EXCELENTE
  BOM
  RAZOAVEL
  RETIRADA_PECAS
}

enum UserRole {
  USER
  ADMIN
} 